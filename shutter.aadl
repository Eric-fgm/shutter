package shutter
public
	with remoteControl;
	with customTypes;
	with customHardware;
	with SEI;
	
-- Main System --
	system SmartBlindSystem
	end SmartBlindSystem;

	system implementation SmartBlindSystem.impl
		subcomponents
			controller: process Controller.impl;
			motor: device BlindMotor.impl;
			scheduler: process SensorBasedScheduler.impl;
			lightSensor: device LightSensor.impl;
			remoteControl: system remoteControl::RemoteControlSystem.impl;
			bluetooth: device BluetoothDevice.impl;

			cpu: processor customHardware::CPU.impl;
			ram: memory customHardware::RAM.impl;
			hwc: bus customHardware::HWConnection.impl;
			btc: virtual bus customHardware::Bluetooth.impl;

		connections
			-- control logic
			c1: port controller.command_out -> motor.command_in;
			c2: port motor.state_out -> controller.state_in;

			-- sensor and scheduler
			c3: port lightSensor.sensor_out -> scheduler.sensor_input;
			c4: port scheduler.command_out -> controller.command_in;
			c5: port remoteControl.command_out -> bluetooth.command_in;
			c13: port bluetooth.command_out -> controller.remote_command_in;

			-- buses
			c6: bus access ram.hwcAccess <-> hwc;
			c7: bus access cpu.hwcAccess <-> hwc;
			c8: bus access lightSensor.hwcAccess <-> hwc;
  			c9: bus access motor.hwcAccess <-> hwc;
  			c10: bus access bluetooth.hwc_access <-> hwc;
  			c11: virtual bus access bluetooth.btc_access <-> btc;
  			c12: virtual bus access remoteControl.btc_access <-> btc;
			
		properties
			Actual_Processor_Binding => (reference (cpu)) applies to controller, scheduler;
			Actual_Processor_Binding => (reference (cpu)) applies to controller.controlThread, scheduler.schedulerThread;
			
			Actual_Memory_Binding => (reference (ram)) applies to controller, scheduler;
			Actual_Connection_Binding => (reference(hwc)) applies to c1, c2, c3, c4, c6, c7, c8, c9, c10;
			Actual_Connection_Binding => (reference(btc)) applies to c11, c12, c13;
			
	end SmartBlindSystem.impl;

-- Process: Controller --
	process Controller
		features
			command_out: out data port customTypes::BlindCommand;
			command_in: in data port customTypes::BlindCommand;
			remote_command_in: in data port customTypes::BlindCommand;
			state_in: in data port customTypes::BlindState;
	end Controller;

	process implementation Controller.impl
		subcomponents
			controlThread: thread ControlThread.impl;
		connections
			c1: port command_in -> controlThread.command_in;
			c2: port controlThread.command_out -> command_out;
			c3: port state_in -> controlThread.state_in;
			c4: port remote_command_in -> controlThread.remote_command_in;
	end Controller.impl;

-- Process: Sensor-Based Scheduler --
	process SensorBasedScheduler
		features
			sensor_input: in data port customTypes::LightSensorValue;
			command_out: out data port customTypes::BlindCommand;
	end SensorBasedScheduler;

	process implementation SensorBasedScheduler.impl
		subcomponents
			schedulerThread: thread SchedulerThread.impl;
		connections
			c1: port sensor_input -> schedulerThread.sensor_data;
			c2: port schedulerThread.command_out -> command_out;
	end SensorBasedScheduler.impl;

-- Devices --
	device BlindMotor
		features
			command_in: in data port customTypes::BlindCommand;
			state_out: out data port customTypes::BlindState;
			hwcAccess: requires bus access customHardware::HWConnection;
		properties
			Period => 50ms;
			Dispatch_Protocol => Periodic;
	end BlindMotor;

	device implementation BlindMotor.impl
	end BlindMotor.impl;

	device LightSensor
		features
			sensor_out: out data port customTypes::LightSensorValue;
			hwcAccess: requires bus access customHardware::HWConnection;
		properties
			Period => 100ms;
			Dispatch_Protocol => Periodic;
	end LightSensor;

	device implementation LightSensor.impl
	end LightSensor.impl;

-- Threads --
	thread ControlThread
		features
			command_in: in data port customTypes::BlindCommand;
			command_out: out data port customTypes::BlindCommand;
			remote_command_in: in data port customTypes::BlindCommand;
			state_in: in data port customTypes::BlindState;
		properties
			SEI::MIPSBudget => 10.0 MIPS;
	end ControlThread;

	thread implementation ControlThread.impl
	end ControlThread.impl;

	thread SchedulerThread
		features
			sensor_data: in data port customTypes::LightSensorValue;
			command_out: out data port customTypes::BlindCommand;
		properties
			SEI::MIPSBudget => 10.0 MIPS;
	end SchedulerThread;

	thread implementation SchedulerThread.impl
	end SchedulerThread.impl;
	
	device BluetoothDevice
		features
			command_in: in data port customTypes::BlindCommand;
			command_out: out data port customTypes::BlindCommand;
        	btc_access: requires virtual bus access customHardware::Bluetooth;
        	hwc_access: requires bus access customHardware::HWConnection;
	end BluetoothDevice;

	device implementation BluetoothDevice.impl
	end BluetoothDevice.impl;

end shutter;